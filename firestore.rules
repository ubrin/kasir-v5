
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // By default, deny all reads and writes.
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow server-side admin access (e.g., from Cloud Functions)
    // where request.auth is null. This rule must be specific.
    // We grant wide access here for simplicity, but in production, you might
    // restrict this to specific collections needed by functions.
    match /{path=**} {
        allow read, write: if request.auth == null;
    }

    // Logged-in users can read/write most data.
    // This is a broad rule. For production, you'd want more granular control,
    // for example, users can only read their own data.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /customers/{customerId} {
      allow read, write: if request.auth != null;
    }

    match /invoices/{invoiceId} {
      allow read, write: if request.auth != null;
    }
    
    match /payments/{paymentId} {
        allow read, write: if request.auth != null;
    }

    match /expenses/{expenseId} {
        allow read, write: if request.auth != null;
    }
    
    match /otherIncomes/{incomeId} {
        allow read, write: if request.auth != null;
    }

    match /collectors/{collectorId} {
        allow read, write: if request.auth != null;
    }

    // Public read access for summary statistics, but only functions can write.
    match /app-stats/{docId} {
      allow read: if true;
      allow write: if request.auth == null; // Allow backend functions to write
    }
  }
}
